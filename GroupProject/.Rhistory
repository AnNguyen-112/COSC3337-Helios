library(readr)
Set1 <- read_csv("Dataset/Solar_flare_RHESSI_2004_05.csv")
View(Set1)
library(readr)
Set2 <- read_csv("Dataset/Solar_flare_RHESSI_2015_16.csv")
View(Set2)
library(readr)
Set3 <- read_csv("Dataset/rhessi_full2002_2018_filtered.csv")
View(Set3)
header.true <- function(df) {
names(df) <- as.character(unlist(df[1,]))
df[-1,]
}
View(header.true)
View(Set1)
View(Set1)
View(Set2)
View(Set1)
library(readr)
data1 <- read_csv("Dataset/Solar_flare_RHESSI_2004_05.csv")
View(data1)
library(readr)
data2 <- read_csv("Dataset/Solar_flare_RHESSI_2015_16.csv")
View(data2)
library(readr)
data3 <- read_csv("Dataset/rhessi_full2002_2018_filtered.csv")
View(data3)
library(tidyverse)
plot(x=data1$total.counts,y=, col = c("red","blue"))
View(data1)
View(data1)
library(tidyverse)
plot(x=data1$total.counts,y=data1$active.region.ar, col = c("red","blue"))
library(tidyverse)
plot(x=data1$total.counts,y=data1$active.region.ar, col = c("red","blue"))
library(tidyverse)
plot(x=data1$active.region.ar,y=data1$total.counts, col = c("red","blue"))
data2 <- dataT1
calculate_intensity_method2 <- function(duration, energy_band) {
# Define weightage for duration and energy band (you can adjust these weights)
duration_weight <- 0.6
energy_weight <- 0.4
# Mapping energy bands to numerical values (midpoints of the bands)
energy_values <- c(9, 18.5, 37.5, 75, 200, 550, 3900, 13500)
# Calculate intensity using weighted sum of duration and energy values
intensity <- (duration * duration_weight) +
((energy_values[match(energy_band, c('6-12', '12-25', '25-50', '50-100', '100-300', '300-800', '800-7000', '7000-20000'))] * energy_weight))
return(intensity)
}
# Apply the function to calculate intensity for each row in the dataset
data2 <- data2 %>%
mutate(intensity_method2 = calculate_intensity_method2(as.numeric(duration.s), energy.kev))
library(dplyr)
library(dplyr)
calculate_intensity_method2 <- function(duration, energy_band) {
# Define weightage for duration and energy band (you can adjust these weights)
duration_weight <- 0.6
energy_weight <- 0.4
# Mapping energy bands to numerical values (midpoints of the bands)
energy_values <- c(9, 18.5, 37.5, 75, 200, 550, 3900, 13500)
# Calculate intensity using weighted sum of duration and energy values
intensity <- (duration * duration_weight) +
((energy_values[match(energy_band, c('6-12', '12-25', '25-50', '50-100', '100-300', '300-800', '800-7000', '7000-20000'))] * energy_weight))
return(intensity)
}
# Apply the function to calculate intensity for each row in the dataset
data2 <- data2 %>%
mutate(intensity_method2 = calculate_intensity_method2(as.numeric(duration.s), energy.kev))
# Print the updated dataset with the calculated intensity using Method 2
print(data2)
#CREATE DENSITY MAP FOR MONTHS 1+2+3+4 AND MONTHS 21+22+23+24
# Load necessary libraries
library(ggplot2)
# Assuming your dataset is stored in a variable named 'data'
# Replace 'data' with the actual name of your dataset variable if it's different
#STEP 1
# Filter data for months 1+2+3+4 (Batch 1)
batch1_Map <- data2 %>%
filter(month >= 1 & month <= 4 & year <= 2004)
# Filter data for months 21+22+23+24 (Batch 11)
batch2_Map <- data2 %>%
filter(month >= 9 & month <= 12 & year >= 2005)
#STEP 2
# Calculate intensity for Batch 1 and Batch 11 using Method 2
batch1_Map <- batch1_Map %>%
mutate(intensity_method2 = calculate_intensity_method2(as.numeric(duration.s), energy.keV))
calculate_intensity_method2 <- function(duration, energy_band) {
# Define weightage for duration and energy band (you can adjust these weights)
duration_weight <- 0.6
energy_weight <- 0.4
# Mapping energy bands to numerical values (midpoints of the bands)
energy_values <- c(9, 18.5, 37.5, 75, 200, 550, 3900, 13500)
# Calculate intensity using weighted sum of duration and energy values
intensity <- (duration * duration_weight) +
((energy_values[match(energy_band, c('6-12', '12-25', '25-50', '50-100', '100-300', '300-800', '800-7000', '7000-20000'))] * energy_weight))
return(intensity)
}
data2 <- data2 %>%
mutate(intensity_method2 = calculate_intensity_method2(as.numeric(duration.s), energy.kev))
print(data2)
#CREATE DENSITY MAP FOR MONTHS 1+2+3+4 AND MONTHS 21+22+23+24
# Load necessary libraries
library(ggplot2)
# Assuming your dataset is stored in a variable named 'data'
# Replace 'data' with the actual name of your dataset variable if it's different
#STEP 1
# Filter data for months 1+2+3+4 (Batch 1)
batch1_Map <- data2 %>%
filter(month >= 1 & month <= 4 & year <= 2004)
# Filter data for months 21+22+23+24 (Batch 11)
batch2_Map <- data2 %>%
filter(month >= 9 & month <= 12 & year >= 2005)
#STEP 2
# Calculate intensity for Batch 1 and Batch 11 using Method 2
batch1_Map <- batch1_Map %>%
mutate(intensity_method2 = calculate_intensity_method2(as.numeric(duration.s), energy.keV))
batch1_Map <- batch1_Map %>%
mutate(intensity_method2 = calculate_intensity_method2(as.numeric(duration.s), energy.kev))
batch2_Map <- batch2_Map %>%
mutate(intensity_method2 = calculate_intensity_method2(as.numeric(duration.s), energy.kev))
batch1_Map$x.pos.asec = as.numeric(batch1_Map$x.pos.asec)
batch1_Map$y.pos.asec = as.numeric(batch1_Map$y.pos.asec)
batch2_Map$x.pos.asec = as.numeric(batch2_Map$x.pos.asec)
batch2_Map$y.pos.asec = as.numeric(batch2_Map$y.pos.asec)
# Create intensity maps for Batch 1 using Method 2
heatmap_batch1 <- ggplot(batch1_Map, aes(x = x.pos.asec, y = y.pos.asec, fill = intensity_method2)) +
geom_tile() +
labs(title = "Intensity Map: Months 1+2+3+4 (Method 2)", x = "X Position", y = "Y Position")
heatmap_batch2 <- ggplot(batch2_Map, aes(x = x.pos.asec, y = y.pos.asec, fill = intensity_method2)) +
geom_tile() +
labs(title = "Intensity Map: Months 1+2+3+4 (Method 2)", x = "X Position", y = "Y Position")
#Printing plots
print(heatmap_batch1)
print(heatmap_batch2)
batch1_Map <- batch1_Map %>%
mutate(intensity_method2 = calculate_intensity_method2(as.numeric(duration.s), energy.kev))
batch2_Map <- batch2_Map %>%
mutate(intensity_method2 = calculate_intensity_method2(as.numeric(duration.s), energy.kev))
#STEP 3
batch1_Map$x.pos.asec = as.numeric(batch1_Map$x.pos.asec)
batch1_Map$y.pos.asec = as.numeric(batch1_Map$y.pos.asec)
batch2_Map$x.pos.asec = as.numeric(batch2_Map$x.pos.asec)
batch2_Map$y.pos.asec = as.numeric(batch2_Map$y.pos.asec)
# Create intensity maps for Batch 1 using Method 2
heatmap_batch1 <- ggplot(batch1_Map, aes(x = x.pos.asec, y = y.pos.asec, fill = intensity_method2)) +
geom_tile() +
labs(title = "Intensity Map: Months 1+2+3+4 (Method 2)", x = "X Position", y = "Y Position")
heatmap_batch2 <- ggplot(batch2_Map, aes(x = x.pos.asec, y = y.pos.asec, fill = intensity_method2)) +
geom_tile() +
labs(title = "Intensity Map: Months 1+2+3+4 (Method 2)", x = "X Position", y = "Y Position")
#Printing plots
print(heatmap_batch1)
print(heatmap_batch2)
library(dplyr)
library(ggplot2)
data1 = read.csv("~/Downloads/rhessi_full2002_2018_filtered.csv")
data2$dt.start <- as.POSIXct(data2$dt.start, format = "%Y-%m-%d %H:%M:%S")
data2 <- data2 %>% select(-starts_with("V"))
#method 1
calculate_intensity_method1 <- function(total_counts) {
intensity <- as.numeric(total_counts)
return(intensity)
}
#end method 1
#method 2
calculate_intensity_method2 <- function(duration, energy_band) {
duration_weight <- 0.6
energy_weight <- 0.4
energy_values <- c(9, 18.5, 37.5, 75, 200, 550, 3900, 13500)
intensity <- (as.numeric(duration) * duration_weight) +
(energy_values[match(energy_band, c('6-12', '12-25', '25-50', '50-100', '100-300', '300-800', '800-7000', '7000-20000'))] * energy_weight)
return(intensity)
}
#end method 2
#data batch
batch1_data <- data2 %>% filter(year == 2004 & month >= 1 & month <= 4)
batch11_data <- data2 %>% filter(year == 2005 & month >= 9 & month <= 12)
#end data batch
batch1_data <- batch1_data %>%
mutate(intensity_method1 = calculate_intensity_method1(total.counts),
intensity_method2 = calculate_intensity_method2(duration.s, energy.kev))
batch11_data <- batch11_data %>%
mutate(intensity_method1 = calculate_intensity_method1(total.counts),
intensity_method2 = calculate_intensity_method2(duration.s, energy.kev))
heatmap_batch1_method1 <- ggplot(batch1_data, aes(x = x.pos.asec, y = y.pos.asec, color = intensity_method1)) +
geom_point(aes(size = energy.kev.i)) +  # Use initial energy value for size
scale_size_continuous(name = "Initial Energy (keV)", breaks = c(6, 12, 25, 50, 100, 300, 800, 7000)) +  # Assuming these are the lower bounds of your energy bands
scale_color_gradient(low = "green", high = "red") +
labs(title = "Intensity Map: Year 2004, Months 1-4 (Method 1)", x = "X Position", y = "Y Position") +
theme_minimal()
heatmap_batch1_method2 <- ggplot(batch1_data, aes(x = x.pos.asec, y = y.pos.asec, color = intensity_method2)) +
geom_point(aes(size = energy.kev.i)) +  # Use initial energy value for size
scale_size_continuous(name = "Initial Energy (keV)", breaks = c(6, 12, 25, 50, 100, 300, 800, 7000)) +
scale_color_gradient(low = "yellow", high = "red") +
labs(title = "Intensity Map: Year 2004, Months 1-4 (Method 2)", x = "X Position", y = "Y Position") +
theme_minimal()
heatmap_batch11_method1 <- ggplot(batch11_data, aes(x = x.pos.asec, y = y.pos.asec, color = intensity_method1)) +
geom_point(aes(size = energy.kev.i)) +
scale_size_continuous(name = "Initial Energy (keV)", breaks = c(6, 12, 25, 50, 100, 300, 800, 7000)) +
scale_color_gradient(low = "pink", high = "red") +
labs(title = "Intensity Map: Year 2005, Months 9-12 (Method 1)", x = "X Position", y = "Y Position") +
theme_minimal()
heatmap_batch11_method2 <- ggplot(batch11_data, aes(x = x.pos.asec, y = y.pos.asec, color = intensity_method2)) +
geom_point(aes(size = energy.kev.i)) +
scale_size_continuous(name = "Energy (keV)", breaks = c(6, 12, 25, 50, 100, 300, 800, 7000)) +
scale_color_gradient(low = "blue", high = "red") +
labs(title = "Intensity Map: Year 2005, Months 9-12 (Method 2)", x = "X Position", y = "Y Position") +
theme_minimal()
print(heatmap_batch1_method1)
print(heatmap_batch1_method2)
print(heatmap_batch11_method1)
print(heatmap_batch11_method2)
print(heatmap_batch1_method1)
print(heatmap_batch1_method2)
print(heatmap_batch11_method1)
print(heatmap_batch11_method2)
print(heatmap_batch1_method1)
print(heatmap_batch1_method2)
print(heatmap_batch11_method1)
print(heatmap_batch11_method2)
library(dplyr)
library(ggplot2)
library(dbscan)
library(plotly)
library(dplyr)
library(ggplot2)
library(dbscan)
install.packages("plotly")
library(plotly)
View(data2)
data2$dt.start <- as.POSIXct(data2$dt.start, format = "%Y-%m-%d %H:%M:%S")
data2 <- data2 %>% select(-starts_with("V"))
#method 1
calculate_intensity_method1 <- function(total_counts) {
intensity <- as.numeric(total_counts)
return(intensity)
}
#end method 1
#method 2
calculate_intensity_method2 <- function(duration, energy_band) {
duration_weight <- 0.6
energy_weight <- 0.4
energy_values <- c(9, 18.5, 37.5, 75, 200, 550, 3900, 13500)
intensity <- (as.numeric(duration) * duration_weight) +
(energy_values[match(energy_band, c('6-12', '12-25', '25-50', '50-100', '100-300', '300-800', '800-7000', '7000-20000'))] * energy_weight)
return(intensity)
}
#end method 2
#data batch
batch1_data <- data2 %>% filter(year == 2004 & month >= 1 & month <= 4)
batch11_data <- data2 %>% filter(year == 2005 & month >= 9 & month <= 12)
batch1_data <- batch1_data %>%
mutate(intensity_method1 = calculate_intensity_method1(total.counts),
intensity_method2 = calculate_intensity_method2(duration.s, energy.kev))
batch11_data <- batch11_data %>%
mutate(intensity_method1 = calculate_intensity_method1(total.counts),
intensity_method2 = calculate_intensity_method2(duration.s, energy.kev))
#end data batch
#visualization
heatmap_batch1_method1 <- ggplot(batch1_data, aes(x = x.pos.asec, y = y.pos.asec, color = intensity_method1)) +
geom_point(aes(size = energy.kev.i)) +  # Use initial energy value for size
scale_size_continuous(name = "Initial Energy (keV)", breaks = c(6, 12, 25, 50, 100, 300, 800, 7000)) +  # Assuming these are the lower bounds of your energy bands
scale_color_gradient(low = "green", high = "red") +
labs(title = "Intensity Map: Year 2004, Months 1-4 (Method 1)", x = "X Position", y = "Y Position") +
theme_minimal()
heatmap_batch1_method2 <- ggplot(batch1_data, aes(x = x.pos.asec, y = y.pos.asec, color = intensity_method2)) +
geom_point(aes(size = energy.kev.i)) +  # Use initial energy value for size
scale_size_continuous(name = "Initial Energy (keV)", breaks = c(6, 12, 25, 50, 100, 300, 800, 7000)) +
scale_color_gradient(low = "yellow", high = "red") +
labs(title = "Intensity Map: Year 2004, Months 1-4 (Method 2)", x = "X Position", y = "Y Position") +
theme_minimal()
heatmap_batch11_method1 <- ggplot(batch11_data, aes(x = x.pos.asec, y = y.pos.asec, color = intensity_method1)) +
geom_point(aes(size = energy.kev.i)) +
scale_size_continuous(name = "Initial Energy (keV)", breaks = c(6, 12, 25, 50, 100, 300, 800, 7000)) +
scale_color_gradient(low = "pink", high = "red") +
labs(title = "Intensity Map: Year 2005, Months 9-12 (Method 1)", x = "X Position", y = "Y Position") +
theme_minimal()
heatmap_batch11_method2 <- ggplot(batch11_data, aes(x = x.pos.asec, y = y.pos.asec, color = intensity_method2)) +
geom_point(aes(size = energy.kev.i)) +
scale_size_continuous(name = "Energy (keV)", breaks = c(6, 12, 25, 50, 100, 300, 800, 7000)) +
scale_color_gradient(low = "blue", high = "red") +
labs(title = "Intensity Map: Year 2005, Months 9-12 (Method 2)", x = "X Position", y = "Y Position") +
theme_minimal()
#end visualization
#Print the result
print(heatmap_batch1_method1)
print(heatmap_batch1_method2)
print(heatmap_batch11_method1)
print(heatmap_batch11_method2)
View(data2)
library(dplyr)
library(ggplot2)
library(plotly)
library(magick)
install.packages("magick")
library(magick)
library(gapminder)
install.packages("gapminder")
library(gapminder)
install.packages("gganimate")
library(gganimate)
#task B
threshold_d1 <- quantile(batch1_data$intensity_method1, probs = 0.90)
threshold_d2 <- quantile(batch1_data$intensity_method1, probs = 0.75)
#end task B
hot_spots_d1 <- batch1_data %>% filter(intensity_method1 > threshold_d1)
hot_spots_d2 <- batch1_data %>% filter(intensity_method1 > threshold_d2)
eps <- 1
minPts <- 5
db_d1 <- dbscan(hot_spots_d1[, c("x.pos.asec", "y.pos.asec")], eps = eps, minPts = minPts)
data2$dt.start <- as.POSIXct(data2$dt.start, format = "%Y-%m-%d %H:%M:%S")
data2 <- data2 %>% select(-starts_with("V"))
#method 1
calculate_intensity_method1 <- function(total_counts) {
intensity <- as.numeric(total_counts)
return(intensity)
}
#end method 1
#method 2
calculate_intensity_method2 <- function(duration, energy_band) {
duration_weight <- 0.6
energy_weight <- 0.4
energy_values <- c(9, 18.5, 37.5, 75, 200, 550, 3900, 13500)
intensity <- (as.numeric(duration) * duration_weight) +
(energy_values[match(energy_band, c('6-12', '12-25', '25-50', '50-100', '100-300', '300-800', '800-7000', '7000-20000'))] * energy_weight)
return(intensity)
}
#end method 2
batch1_data <- data2 %>% filter(year == 2004 & month >= 1 & month <= 4)
batch11_data <- data2 %>% filter(year == 2005 & month >= 9 & month <= 12)
batch1_data <- batch1_data %>%
mutate(intensity_method1 = calculate_intensity_method1(total.counts),
intensity_method2 = calculate_intensity_method2(duration.s, energy.kev))
batch11_data <- batch11_data %>%
mutate(intensity_method1 = calculate_intensity_method1(total.counts),
intensity_method2 = calculate_intensity_method2(duration.s, energy.kev))
heatmap_batch1_method1 <- ggplot(batch1_data, aes(x = x.pos.asec, y = y.pos.asec, color = intensity_method1)) +
geom_point(aes(size = energy.kev.i)) +  # Use initial energy value for size
scale_size_continuous(name = "Initial Energy (keV)", breaks = c(6, 12, 25, 50, 100, 300, 800, 7000)) +  # Assuming these are the lower bounds of your energy bands
scale_color_gradient(low = "green", high = "red") +
labs(title = "Intensity Map: Year 2004, Months 1-4 (Method 1)", x = "X Position", y = "Y Position") +
theme_minimal()
heatmap_batch1_method2 <- ggplot(batch1_data, aes(x = x.pos.asec, y = y.pos.asec, color = intensity_method2)) +
geom_point(aes(size = energy.kev.i)) +  # Use initial energy value for size
scale_size_continuous(name = "Initial Energy (keV)", breaks = c(6, 12, 25, 50, 100, 300, 800, 7000)) +
scale_color_gradient(low = "yellow", high = "red") +
labs(title = "Intensity Map: Year 2004, Months 1-4 (Method 2)", x = "X Position", y = "Y Position") +
theme_minimal()
heatmap_batch11_method1 <- ggplot(batch11_data, aes(x = x.pos.asec, y = y.pos.asec, color = intensity_method1)) +
geom_point(aes(size = energy.kev.i)) +
scale_size_continuous(name = "Initial Energy (keV)", breaks = c(6, 12, 25, 50, 100, 300, 800, 7000)) +
scale_color_gradient(low = "pink", high = "red") +
labs(title = "Intensity Map: Year 2005, Months 9-12 (Method 1)", x = "X Position", y = "Y Position") +
theme_minimal()
heatmap_batch11_method2 <- ggplot(batch11_data, aes(x = x.pos.asec, y = y.pos.asec, color = intensity_method2)) +
geom_point(aes(size = energy.kev.i)) +
scale_size_continuous(name = "Energy (keV)", breaks = c(6, 12, 25, 50, 100, 300, 800, 7000)) +
scale_color_gradient(low = "blue", high = "red") +
labs(title = "Intensity Map: Year 2005, Months 9-12 (Method 2)", x = "X Position", y = "Y Position") +
theme_minimal()
print(heatmap_batch1_method1)
print(heatmap_batch1_method2)
print(heatmap_batch11_method1)
print(heatmap_batch11_method2)
data2$dt.start <- as.POSIXct(data2$dt.start, format = "%Y-%m-%d %H:%M:%S")
data2 <- data2 %>% select(-starts_with("V"))
#method 1
calculate_intensity_method1 <- function(total_counts) {
intensity <- as.numeric(total_counts)
return(intensity)
}
#end method 1
#method 2
calculate_intensity_method2 <- function(duration, energy_band) {
duration_weight <- 0.6
energy_weight <- 0.4
energy_values <- c(9, 18.5, 37.5, 75, 200, 550, 3900, 13500)
intensity <- (as.numeric(duration) * duration_weight) +
(energy_values[match(energy_band, c('6-12', '12-25', '25-50', '50-100', '100-300', '300-800', '800-7000', '7000-20000'))] * energy_weight)
return(intensity)
}
#end method 2
batch1_data <- data2 %>% filter(year == 2004 & month >= 1 & month <= 4)
batch11_data <- data2 %>% filter(year == 2005 & month >= 9 & month <= 12)
batch1_data <- batch1_data %>%
mutate(intensity_method1 = calculate_intensity_method1(total.counts),
intensity_method2 = calculate_intensity_method2(duration.s, energy.kev))
batch11_data <- batch11_data %>%
mutate(intensity_method1 = calculate_intensity_method1(total.counts),
intensity_method2 = calculate_intensity_method2(duration.s, energy.kev))
heatmap_batch1_method1 <- ggplot(batch1_data, aes(x = x.pos.asec, y = y.pos.asec, color = intensity_method1)) +
geom_point(aes(size = energy.kev.i)) +  # Use initial energy value for size
scale_size_continuous(name = "Initial Energy (keV)", breaks = c(6, 12, 25, 50, 100, 300, 800, 7000)) +  # Assuming these are the lower bounds of your energy bands
scale_color_gradient(low = "green", high = "red") +
labs(title = "Intensity Map: Year 2004, Months 1-4 (Method 1)", x = "X Position", y = "Y Position") +
theme_minimal()
heatmap_batch1_method2 <- ggplot(batch1_data, aes(x = x.pos.asec, y = y.pos.asec, color = intensity_method2)) +
geom_point(aes(size = energy.kev.i)) +  # Use initial energy value for size
scale_size_continuous(name = "Initial Energy (keV)", breaks = c(6, 12, 25, 50, 100, 300, 800, 7000)) +
scale_color_gradient(low = "yellow", high = "red") +
labs(title = "Intensity Map: Year 2004, Months 1-4 (Method 2)", x = "X Position", y = "Y Position") +
theme_minimal()
heatmap_batch11_method1 <- ggplot(batch11_data, aes(x = x.pos.asec, y = y.pos.asec, color = intensity_method1)) +
geom_point(aes(size = energy.kev.i)) +
scale_size_continuous(name = "Initial Energy (keV)", breaks = c(6, 12, 25, 50, 100, 300, 800, 7000)) +
scale_color_gradient(low = "pink", high = "red") +
labs(title = "Intensity Map: Year 2005, Months 9-12 (Method 1)", x = "X Position", y = "Y Position") +
theme_minimal()
heatmap_batch11_method2 <- ggplot(batch11_data, aes(x = x.pos.asec, y = y.pos.asec, color = intensity_method2)) +
geom_point(aes(size = energy.kev.i)) +
scale_size_continuous(name = "Energy (keV)", breaks = c(6, 12, 25, 50, 100, 300, 800, 7000)) +
scale_color_gradient(low = "blue", high = "red") +
labs(title = "Intensity Map: Year 2005, Months 9-12 (Method 2)", x = "X Position", y = "Y Position") +
theme_minimal()
print(heatmap_batch1_method1)
print(heatmap_batch1_method2)
print(heatmap_batch11_method1)
print(heatmap_batch11_method2)
library(dplyr)
library(ggplot2)
library(plotly)
install.packages("magick")
library(magick)
install.packages("gapminder")
library(gapminder)
install.packages("gganimate")
library(gganimate)
data2$dt.start <- as.POSIXct(data2$dt.start, format = "%Y-%m-%d %H:%M:%S")
data2 <- data2 %>% select(-starts_with("V"))
#method 1
calculate_intensity_method1 <- function(total_counts) {
intensity <- as.numeric(total_counts)
return(intensity)
}
#end method 1
#method 2
calculate_intensity_method2 <- function(duration, energy_band) {
duration_weight <- 0.6
energy_weight <- 0.4
energy_values <- c(9, 18.5, 37.5, 75, 200, 550, 3900, 13500)
intensity <- (as.numeric(duration) * duration_weight) +
(energy_values[match(energy_band, c('6-12', '12-25', '25-50', '50-100', '100-300', '300-800', '800-7000', '7000-20000'))] * energy_weight)
return(intensity)
}
#end method 2
batch1_data <- data2 %>% filter(year == 2004 & month >= 1 & month <= 4)
batch11_data <- data2 %>% filter(year == 2005 & month >= 9 & month <= 12)
batch1_data <- batch1_data %>%
mutate(intensity_method1 = calculate_intensity_method1(total.counts),
intensity_method2 = calculate_intensity_method2(duration.s, energy.kev))
batch11_data <- batch11_data %>%
mutate(intensity_method1 = calculate_intensity_method1(total.counts),
intensity_method2 = calculate_intensity_method2(duration.s, energy.kev))
heatmap_batch1_method1 <- ggplot(batch1_data, aes(x = x.pos.asec, y = y.pos.asec, color = intensity_method1)) +
geom_point(aes(size = energy.kev.i)) +  # Use initial energy value for size
scale_size_continuous(name = "Initial Energy (keV)", breaks = c(6, 12, 25, 50, 100, 300, 800, 7000)) +  # Assuming these are the lower bounds of your energy bands
scale_color_gradient(low = "green", high = "red") +
labs(title = "Intensity Map: Year 2004, Months 1-4 (Method 1)", x = "X Position", y = "Y Position") +
theme_minimal()
heatmap_batch1_method2 <- ggplot(batch1_data, aes(x = x.pos.asec, y = y.pos.asec, color = intensity_method2)) +
geom_point(aes(size = energy.kev.i)) +  # Use initial energy value for size
scale_size_continuous(name = "Initial Energy (keV)", breaks = c(6, 12, 25, 50, 100, 300, 800, 7000)) +
scale_color_gradient(low = "yellow", high = "red") +
labs(title = "Intensity Map: Year 2004, Months 1-4 (Method 2)", x = "X Position", y = "Y Position") +
theme_minimal()
heatmap_batch11_method1 <- ggplot(batch11_data, aes(x = x.pos.asec, y = y.pos.asec, color = intensity_method1)) +
geom_point(aes(size = energy.kev.i)) +
scale_size_continuous(name = "Initial Energy (keV)", breaks = c(6, 12, 25, 50, 100, 300, 800, 7000)) +
scale_color_gradient(low = "pink", high = "red") +
labs(title = "Intensity Map: Year 2005, Months 9-12 (Method 1)", x = "X Position", y = "Y Position") +
theme_minimal()
heatmap_batch11_method2 <- ggplot(batch11_data, aes(x = x.pos.asec, y = y.pos.asec, color = intensity_method2)) +
geom_point(aes(size = energy.kev.i)) +
scale_size_continuous(name = "Energy (keV)", breaks = c(6, 12, 25, 50, 100, 300, 800, 7000)) +
scale_color_gradient(low = "blue", high = "red") +
labs(title = "Intensity Map: Year 2005, Months 9-12 (Method 2)", x = "X Position", y = "Y Position") +
theme_minimal()
print(heatmap_batch1_method1)
print(heatmap_batch1_method2)
print(heatmap_batch11_method1)
print(heatmap_batch11_method2)
#task B
threshold_d1 <- quantile(batch1_data$intensity_method1, probs = 0.90)
threshold_d2 <- quantile(batch1_data$intensity_method1, probs = 0.75)
#end task B
hot_spots_d1 <- batch1_data %>% filter(intensity_method1 > threshold_d1)
hot_spots_d2 <- batch1_data %>% filter(intensity_method1 > threshold_d2)
eps <- 1
minPts <- 5
updateR
updateR()
version
